# The sequence of triangle numbers is generated by adding the natural numbers. So the 7^(th) triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
#
# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#      1: 1
#      3: 1,3
#      6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
#
# We can see that 28 is the first triangle number to have over five divisors.
#
# What is the value of the first triangle number to have over five hundred divisors?

require 'prime_lib.rb'
num = 1
iterator = 1
count = 0
largest_count = 0

while count < 500
  count = 0
  divisors = []

  iterator += 1
  num += iterator

  1.upto(num) {|i| count += 1 if num % i == 0}
  if count > largest_count
    puts "#{num}\t #{count}"
    largest_count = count
  end
  # divisors << 1
  # primes.pop if primes[-1] == num
  # primes.each do |p|
  #   divisors << p if num % p == 0
  #   2.upto(p) {|i| divisors << (p * i) if num % (p * i) == 0 }
  #   #
  #   #   divisors.each do |div|
  #   #     next if (p * div) >= num
  #   #     divisors << p if ((p * div) % num == 0)
  #   #   end
  #   # end
  # end
  # divisors << num
  # divisors.uniq!
end

puts "#{num} has #{count} divisors"
puts divisors
